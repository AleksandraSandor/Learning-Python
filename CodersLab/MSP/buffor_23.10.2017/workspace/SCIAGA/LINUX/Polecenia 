------------------------------------------------------Django:
django-admin version
django-admin	<command>	[options]
    startproject	–	tworzy	nowy	projekt    Django,
    runserver	–	uruchamia	serwer	testowy,
    startapp	–	tworzy	nową	aplikację    wewnątrz	projektu,
    makemigrations	–	tworzy	skrypt	migrujący    bazę	danych,
    migrate	–	uruchamia	skrypty	migrujące    bazę	danych.


------------------------------------------------------MySql
# -----------------typy danych w mysql:
# int                                # timestamp
# tinyint                            # time
# smallint                           # year(m)
# mediumint                          # char(m)
# bigint                             # varchar(m)
# float(m,d)                         # blob lub text
# double(m,d)                        # tinyblob lub tinytext
# decimal(m,d)                       # mediumblob lub mediumtext
# date                               # longblob lub longtext
# datetime
# -----------------atrybuty:
# default
# null / not null
# auto_increment
# primary key (int auto_increment)
# unsigned
# serofill
# character set
# binary
# unique <--- flaga nie atrybut ?
mysql -h localhost -u root -p

SHOW DATABASES;
SHOW TABLES;
describe library_user; <--- TABELA !!! <--- typy danych w tabeli
select * from <tabela>; <--- wszystkie wartosci w tabeli

CREATE DATABASE TEST;
USE TEST;
CREATE TABLE person(
    -> id int NOT NULL, 
    -> name char(100) NOT NULL,
    -> surname varchar(255) not null,
    -> email varchar(255) null, 
    -> PRIMARY KEY(id));
drop table library_user;
drop database nazwa_db;

insert into user values(50, "test", "test")
insert into Bilet(ilosc,cena) values(2,6.66);
delete from Bilet
delete from user where user_id = 50;


select * from <tabela> where <kolumna> = "wojtek"
select * from <tabela> where <kolumna> like "W%"
select <kolumna> as <kolumn_alias> from <tabela>
select <kolumna>, <kolumna> from <tabela> order by <kolumna> ASC|DESC, <kolumna> ASC|DESC
select * from user where user_id <= 50 order by user_id

select * from user (opcja left, right) join product on user.user_id=product.prod_id;


update product set price = floor(price) where price < 2.7
select * from user where user_id <= 50 order by user_id

alter table user add opis varchar(255)
alter table user drop column opis
alter table user modify column opis int;

WIELE do wielu:
create table Product__Orders(id int auto_increment, Product_id int(11), _Order_id int(11), primary key (id), foreign key(Product_id) references Product(id), foreign key(_Order_id) references _Order(id));


http://127.0.0.1:5000/?table=Client&id=1
mysqldump -u root -p cinemas_db > test.sql
mysql -u root -p -D cinema_db < kino.sql

mysqladmin localhost -p create <--- tworzy nową baze
                        drop nazwa Bazy
                        password
                        ping
                        status










sudo apt install python3-pip   <--- instalowanie programu pip który słurzy do instalowania zew. bibliotek do pythona
pip3 install django 
pip3 install --upgrade <nazwa>
pip3 install -r <nazwa-pliku> <--- instalacja z pliku
------------------------------------------------------flask:
export FLASK_APP=hello.py
flask run
flask run --host=0.0.0.0
lsof -i :5000





------------------------------------------------------virtualenv
virtualenv --no-site-packages projekt1
virtualenv --no-site-packages projekt2
source ./projekt1/bin/activate
pip install pip --upgrade
pip install django==1.2.6
deactivate
source ./projekt2/bin/activate
pip install pip --upgrade
pip install django==1.4.2
deactivate
source /sciezka/do/srodowiska/bin/activate
pip freeze > /tmp/requirements.txt
pip install -r requirements.txt
virtualenv -p python3 <nazwa_katalogu>



------------------------------------------------------BASH
history <--- lista 1000 ostatnich komend   CTRL+R
!! <--- wykonuje ostatnią komendę
!5 <--- wykonuje 5 komendę z listy
!-3 <--- wykonuje 3 komendę od końca
!nazwa <--- wykonuje ostatnią komendę zaczynającą się od grep
mkdir
pwd <--- scieżka gdzie jesteśmy 
cp plik1 plik2 <--- kopiowanie plików 
mv plik1 plik2 <--- przenoszenie plików
ls -a <--- także ukryte liki 
ls -l <--- dodatkowe info
ls -lg <--- prawa dostępu 
rm plik
rm -r <--- także katalogi 
rmdir katalog
cat file <--- wyświetala plik 
less plik <--- wyświetla plik strona po stronie 
head plik <--- wyswietla pierwsze 10 lini pliku
head -n <--- wyswietla n lini
tail -n <--- wyświetla n lini
tail plik <--- wyświetla ostatnie 10 lini pliku
wc plik <--- podaje liczbę słów, znaków lini lub bajtów w pliku/potoku
wc -c bity
wc -i bity ?
wc -w slowa
wc -m znaki
touch <--- tworzy plik o podanej nazwie
ps -a innych urzytkowników -e rozszeżone info. -u dodatkowe info(tak samo -f) -x wszystkie procesy
pstree <--- w formie drzewa 

ssh
screen
screen -S nazwa_sesji
screen -d -R nazwa_sesji <---przywraca sesje
CTRL+A+D <--- odłącza sesje  CTRL+A+K <--- zamyka sesje
cron
crontab

echo $<nazwa_zmiennej> <--- wyswietlenie zmiennej
set <nazwa_zmiennej>=wartosc <--- ustawienie zmiennej
ln plik_1 plik_2 <--- "miekkie powiązanie"
ln -s plik_1 plik_2 <--- dowiązanie po inode

zsh <--- rozwinięcie sh !!!

type -a python3 <--- wskazuje katalog do pliku wykonywalnego 




------------------------------------------------------zarządzanie urzytkownikami i plikami:
adduser
usermod -d homedir <--- wskazuje na katalog domowy
		-g groupname <--- dodaje do grupy
		-m <--- tworzy nowy katalog domowy
		-l <--- zmienia nazwe uzytkownika (tlko dla usermode
passwd
deluser	
		-r <--- usuwa razem z katalogiem domowym 
addgroupe groupename 	-g ID <--- numer ID grupy
groupemod groupename 	-o <--- daje moliwo uycia zaj ID
						-r <-- dodaje konto systemowe do grupy
						-f <-- zwraca sucess jeli grupa ju istnieje
						-n <--- zmienia nazwe grupy (tylko groupemode)
delgroup
sudo nazwa_komendy
sudo su <--- logowanie na roota
visudo <--- konfiguraja kto ma prawa do sudo
chmod a=re file.txt      -U urzytkownik -G grupa -O inni -a wszyscy r odczyt w zapis,usuwanie x uruchomienie ew.
						wejscie do kat. + dodanie - odjęcie
chgrp znazwa_grupy plik_1 plik_2
chown <--- zmiana właściciela pliku 


------------------------------------------------------instalowanie:
sudo apt-get update <--- aktualizowanie wszytskich pakietów 
sudo apt-get dist--upgrade <--- aktualizowanie dystybucji
sudo apt-get celan <--- kasowanie wszystkich pobranych plików
sudo apt-get install nazwa_pakietu
sudo apt-get remove nzwa _pakietu
sudo apt-get --pure remove nazwa_pakietu <--- razem z zaleźnościami
sudo apt-get source nazwa_pakietu <--- pobiera kod źrudłowy
sudo apt-cache search nazwa pakietu <--- szukanie pakietu
sudo dpkg nazwa pakietu <--- instalowanie pakietów .deb z -r kasowanie

							










------------------------------------------------------find:
find <katalog startowy><kryteria i akcje>
find . -name "pattern" -print
-atime n <--- plik utworzny n dni temu np:   +7 utworzony dawniej niz 7 dni temu
-mtime n <--- plik modyfukowany n dni temu   -5 zmodyfikowany nie później niż 5 dni temu
-size n <--- plik ma n bloków (blok to 512 bajtów) np: +100 plik większy niż 50 kB
-type f <--- wyszukuje po typie pliku f = plik txt d= katalog
-name plik <--- nazwa pliku
-user usr <--- wlasciciel pliku 
-group <--- grupa 
-perm p <--- Tryb dostepu do pliku gdzie p to liczba 
-print <--- wyswietla scieżę do pliku
-exec cmd <--- wykonuje komende na pliku 

sort








------------------------------------------------------grep:
-i <--- szuka nie zwarzając na wielkośc liter
-w <--- tylko pełne słowo 
-A <n> <--- pokazuje n lini po wyszukanym słoie
-B <n> <--- pokazuje n lini przed wyszukanym slowem
-r <--- wyszukuje we wszystkich plkach podanego katalogu
-v <-- wyszukuje wszystkie linijki nie zawierajace podanego slowa
-c <--- podaje liste wystapien
-I <--- wypisuje nazwy plików zawierajace slowo 
-n <--- podaje numer lini wysapienia 









------------------------------------------------------Katalogi
/dev <--- urządzenia
/proc <--- miedzy innnymi informacje o systemie
/etc <--- pliki konfiguracyjne 
/sbin <--- pliki binarne systemowe
/lib <--- biblioteki
/mnt <--- zamontowane dyski
/bin <--- programy 
/etc/init.d <--- Katalog z któ©ego uruchamiane są skrypty podczas startu systemu
/etc/profile.d <--- uruchamiane przy logowaniu urzytkownika
/usr <--- pliki wykonywalne programów, kod źródłowy, biblioteki i dokumentacjie 
